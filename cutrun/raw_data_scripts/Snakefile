configfile: "config.json"

rule all:
    input:
        bw_human_bpm=expand("/shared/projects/xci/homo_sapiens/stem_cells/charbel_2022/cutrun_2023/bigwig/{sample}.homo_sapiens.BPM.all.bw", sample=config["SAMPLES_HUMAN"]),
        bw_human_spike_yeast=expand("/shared/projects/xci/homo_sapiens/stem_cells/charbel_2022/cutrun_2023/bigwig/{sample}.homo_sapiens.spike.yeast.all.BPM.all.bw", sample=config["SAMPLES_HUMAN"]),
        bw_marmoset_bpm=expand("/shared/projects/xci/callitrix_jacchus/stem_cells/charbel_2022/cutrun_2023/bigwig/{sample}.callitrix_jacchus.BPM.all.bw", sample=config["SAMPLES_MARMOSET"]),
        bw_marmoset_spike_yeast=expand("/shared/projects/xci/callitrix_jacchus/stem_cells/charbel_2022/cutrun_2023/bigwig/{sample}.callitrix_jacchus.spike.yeast.all.BPM.all.bw", sample=config["SAMPLES_MARMOSET"]),
        bam_stats_homo_sapiens=expand("/shared/projects/xci/homo_sapiens/stem_cells/charbel_2022/cutrun_2023/bam/{sample}/Filtered_bams/{sample}_filtered_bam_stat.txt", sample=config["SAMPLES_HUMAN"]),
        bam_stats_callitrix_jacchus=expand("/shared/projects/xci/callitrix_jacchus/stem_cells/charbel_2022/cutrun_2023/bam/{sample}/Filtered_bams/{sample}_filtered_bam_stat.txt", sample=config["SAMPLES_MARMOSET"])

rule bowtie2_coli:
    input:
        sample=["/shared/projects/xci/{species}/stem_cells/charbel_2022/cutrun_2023/fastq/{sample}_trimmed_R1.fastq.gz", "/shared/projects/xci/{species}/stem_cells/charbel_2022/cutrun_2023/fastq/{sample}_trimmed_R2.fastq.gz"]
    output:
        temp("/shared/projects/xci/{species}/stem_cells/charbel_2022/cutrun_2023/bam/{sample}.coli.bam")
    resources:
        load=5
    threads: 8
    params:
        index="/shared/projects/xci/ReferenceGenomes/E_coli/bowtie_index/ecoli",
        extra="--local --very-sensitive-local --no-unal --no-mixed --no-discordant --phred33 -L 10 -X 700"
    log:
        "log/{species}_{sample}_bowtie2_coli.log"
    priority: 2
    wrapper:
        "0.78.0/bio/bowtie2/align"

rule bowtie2_yeast:
    input:
        sample=["/shared/projects/xci/{species}/stem_cells/charbel_2022/cutrun_2023/fastq/{sample}_trimmed_R1.fastq.gz", "/shared/projects/xci/{species}/stem_cells/charbel_2022/cutrun_2023/fastq/{sample}_trimmed_R2.fastq.gz"]
    output:
        temp("/shared/projects/xci/{species}/stem_cells/charbel_2022/cutrun_2023/bam/{sample}.yeast.bam")
    resources:
        load=5
    threads: 8
    params:
        index="/shared/projects/xci/ReferenceGenomes/S_cerevisiae/S_cer/S_cer",
        extra="--local --very-sensitive-local --no-unal --no-mixed --no-discordant --phred33 -L 10 -X 700"
    log:
        "log/{species}_{sample}_bowtie2_yeast.log"
    priority: 2
    wrapper:
        "0.78.0/bio/bowtie2/align"

rule bowtie2_mus:
    input:
        sample=["/shared/projects/xci/{species}/stem_cells/charbel_2022/cutrun_2023/fastq/{sample}_trimmed_R1.fastq.gz", "/shared/projects/xci/{species}/stem_cells/charbel_2022/cutrun_2023/fastq/{sample}_trimmed_R2.fastq.gz"]
    output:
        temp("/shared/projects/xci/{species}/stem_cells/charbel_2022/cutrun_2023/bam/{sample}.mus.bam")
    resources:
        load=5
    threads: 8
    params:
        index="/shared/projects/xci/ReferenceGenomes/mm10/bowtie2/mm10",
        extra="--local --very-sensitive-local --no-unal --no-mixed --no-discordant --phred33 -L 10 -X 700"
    log:
        "log/{species}_{sample}_bowtie2_mus.log"
    priority: 2
    wrapper:
        "0.78.0/bio/bowtie2/align"

rule samtools_sort_coli:
    input:
        "/shared/projects/xci/{species}/stem_cells/charbel_2022/cutrun_2023/bam/{sample}.coli.bam"
    output:
        temp("/shared/projects/xci/{species}/stem_cells/charbel_2022/cutrun_2023/bam/{sample}.coli.sorted.bam")
    threads: 4
    log:
        "log/{species}_{sample}_samtools_sort_coli.log"
    priority: 2
    shell:
        "(samtools sort -@ {threads} \
            -o {output} \
            {input}) 2> {log}"

rule samtools_sort_yeast:
    input:
        "/shared/projects/xci/{species}/stem_cells/charbel_2022/cutrun_2023/bam/{sample}.yeast.bam"
    output:
        temp("/shared/projects/xci/{species}/stem_cells/charbel_2022/cutrun_2023/bam/{sample}.yeast.sorted.bam")
    threads: 4
    log:
        "log/{species}_{sample}_samtools_sort_yeast.log"
    priority: 2
    shell:
        "(samtools sort -@ {threads} \
            -o {output} \
            {input}) 2> {log}"

rule samtools_sort_mus:
    input:
        "/shared/projects/xci/{species}/stem_cells/charbel_2022/cutrun_2023/bam/{sample}.mus.bam"
    output:
        temp("/shared/projects/xci/{species}/stem_cells/charbel_2022/cutrun_2023/bam/{sample}.mus.sorted.bam")
    threads: 4
    log:
        "log/{species}_{sample}_samtools_sort_mus.log"
    priority: 2
    shell:
        "(samtools sort -@ {threads} \
            -o {output} \
            {input}) 2> {log}"

rule coli_index:
    input: "/shared/projects/xci/{species}/stem_cells/charbel_2022/cutrun_2023/bam/{sample}.coli.sorted.bam"
    output: temp("/shared/projects/xci/{species}/stem_cells/charbel_2022/cutrun_2023/bam/{sample}.coli.sorted.bam.bai")
    log: "log/{species}_{sample}_index_coli.log"
    params:
        "" # optional params string
    priority: 3
    wrapper:
        "0.78.0/bio/samtools/index"

rule yeast_index:
    input: "/shared/projects/xci/{species}/stem_cells/charbel_2022/cutrun_2023/bam/{sample}.yeast.sorted.bam"
    output: temp("/shared/projects/xci/{species}/stem_cells/charbel_2022/cutrun_2023/bam/{sample}.yeast.sorted.bam.bai")
    log: "log/{species}_{sample}_index_yeast.log"
    params:
        "" # optional params string
    priority: 3
    wrapper:
        "0.78.0/bio/samtools/index"

rule mus_index:
    input: "/shared/projects/xci/{species}/stem_cells/charbel_2022/cutrun_2023/bam/{sample}.mus.sorted.bam"
    output: temp("/shared/projects/xci/{species}/stem_cells/charbel_2022/cutrun_2023/bam/{sample}.mus.sorted.bam.bai")
    log: "log/{species}_{sample}_index_mus.log"
    params:
        "" # optional params string
    priority: 3
    wrapper:
        "0.78.0/bio/samtools/index"

rule samtools_idxstats_coli:
    input:
        bam="/shared/projects/xci/{species}/stem_cells/charbel_2022/cutrun_2023/bam/{sample}.coli.sorted.bam",
        bai="/shared/projects/xci/{species}/stem_cells/charbel_2022/cutrun_2023/bam/{sample}.coli.sorted.bam.bai"
    output: "/shared/projects/xci/{species}/stem_cells/charbel_2022/cutrun_2023/stats/{sample}.coli.txt"
    log: "log/{species}_{sample}_stats_coli.txt"
    priority: 3
    shell:
        "(samtools idxstats {input.bam} > {output}) 2> {log}"

rule samtools_idxstats_yeast:
    input:
        bam="/shared/projects/xci/{species}/stem_cells/charbel_2022/cutrun_2023/bam/{sample}.yeast.sorted.bam",
        bai="/shared/projects/xci/{species}/stem_cells/charbel_2022/cutrun_2023/bam/{sample}.yeast.sorted.bam.bai"
    output: "/shared/projects/xci/{species}/stem_cells/charbel_2022/cutrun_2023/stats/{sample}.yeast.txt"
    log: "log/{species}_{sample}_stats_yeast.txt"
    priority: 3
    shell:
        "(samtools idxstats {input.bam} > {output}) 2> {log}"

rule bowtie2_hg38:
    input:
        sample=["/shared/projects/xci/homo_sapiens/stem_cells/charbel_2022/cutrun_2023/fastq/{sample}_trimmed_R1.fastq.gz", "/shared/projects/xci/homo_sapiens/stem_cells/charbel_2022/cutrun_2023/fastq/{sample}_trimmed_R2.fastq.gz"]
    output:
        temp("/shared/projects/xci/homo_sapiens/stem_cells/charbel_2022/cutrun_2023/bam/{sample}.homo_sapiens.bam")
    resources:
        load=5
    threads: 8
    params:
        index="/shared/projects/xci/ReferenceGenomes/GRCh38/bowtie2/hg38",
        extra="--local --very-sensitive-local --no-unal --no-mixed --no-discordant --phred33 -L 10 -X 700"
    log:
        "log/homo_sapiens_{sample}_bowtie2.log"
    priority: 2
    wrapper:
        "0.78.0/bio/bowtie2/align"

# rule calJac4_bowtie2_index:
#     priority:1
#     input:
#         fasta="/shared/projects/xci/ReferenceGenomes/calJac4/calJac4.fa"
#     output:
#         bt2_1="/shared/projects/xci/ReferenceGenomes/calJac4/bowtie2/calJac4.1.bt2",
#         bt2_2="/shared/projects/xci/ReferenceGenomes/calJac4/bowtie2/calJac4.2.bt2",
#         bt2_3="/shared/projects/xci/ReferenceGenomes/calJac4/bowtie2/calJac4.3.bt2",
#         bt2_4="/shared/projects/xci/ReferenceGenomes/calJac4/bowtie2/calJac4.4.bt2",
#         bt2_rev1="/shared/projects/xci/ReferenceGenomes/calJac4/bowtie2/calJac4.rev.1.bt2",
#         bt2_rev2="/shared/projects/xci/ReferenceGenomes/calJac4/bowtie2/calJac4.rev.2.bt2"
#     params:
#         basename="/shared/projects/xci/ReferenceGenomes/calJac4/bowtie2/calJac4"
#     threads:8
#     shell:"""
#     bowtie2-build --threads {threads} {input.fasta} {params.basename}
#     """
# CAUTION : RUN SEPARATELY BEFORE

rule bowtie2_calJac4:
    input:
        sample=["/shared/projects/xci/callitrix_jacchus/stem_cells/charbel_2022/cutrun_2023/fastq/{sample}_trimmed_R1.fastq.gz", "/shared/projects/xci/callitrix_jacchus/stem_cells/charbel_2022/cutrun_2023/fastq/{sample}_trimmed_R2.fastq.gz"]
    output:
        temp("/shared/projects/xci/callitrix_jacchus/stem_cells/charbel_2022/cutrun_2023/bam/{sample}.callitrix_jacchus.bam")
    resources:
        load=5
    threads: 8
    params:
        index="/shared/projects/xci/ReferenceGenomes/calJac4/bowtie2/calJac4",
        extra="--local --very-sensitive-local --no-unal --no-mixed --no-discordant --phred33 -L 10 -X 700"
    log:
        "log/callitrix_jacchus_{sample}_bowtie2.log"
    priority: 2
    wrapper:
        "0.78.0/bio/bowtie2/align"     

rule samtools_sort_species:
    input:
        "/shared/projects/xci/{species}/stem_cells/charbel_2022/cutrun_2023/bam/{sample}.{species}.bam"
    output:
        temp("/shared/projects/xci/{species}/stem_cells/charbel_2022/cutrun_2023/bam/{sample}.{species}.sorted.bam")
    threads: 4
    log:
        "log/{species}_{sample}_samtools_sort.log"
    priority: 2
    shell:
        "(samtools sort -@ {threads} \
            -o {output} \
            {input}) 2> {log}"

rule uniq_reads_species:
    input:
        bam="/shared/projects/xci/{species}/stem_cells/charbel_2022/cutrun_2023/bam/{sample}.{species}.sorted.bam",
    output:
        temp("/shared/projects/xci/{species}/stem_cells/charbel_2022/cutrun_2023/bam/{sample}.{species}.uniq.bam")
    params: qual=10
    priority: 3
    log:
        "log/{species}_{sample}_uniq.log"
    shell:
        "(samtools view -q {params.qual} -b {input.bam} > {output}) \
            2> {log}"

rule uniq_reads_mus:
    input:
        bam="/shared/projects/xci/{species}/stem_cells/charbel_2022/cutrun_2023/bam/{sample}.mus.sorted.bam",
    output:
        temp("/shared/projects/xci/{species}/stem_cells/charbel_2022/cutrun_2023/bam/{sample}.mus.uniq.bam")
    params: qual=10
    priority: 3
    log:
        "log/{species}_{sample}_mus_uniq.log"
    shell:
        "(samtools view -q {params.qual} -b {input.bam} > {output}) \
            2> {log}"

rule samtools_index_species:
    input: "/shared/projects/xci/{species}/stem_cells/charbel_2022/cutrun_2023/bam/{sample}.{species}.uniq.bam"
    output: temp("/shared/projects/xci/{species}/stem_cells/charbel_2022/cutrun_2023/bam/{sample}.{species}.uniq.bam.bai")
    params:
        "" # optional params string
    priority: 3
    wrapper:
        "0.30.0/bio/samtools/index"

rule samtools_index_mus:
    input: "/shared/projects/xci/{species}/stem_cells/charbel_2022/cutrun_2023/bam/{sample}.mus.uniq.bam"
    output: temp("/shared/projects/xci/{species}/stem_cells/charbel_2022/cutrun_2023/bam/{sample}.mus.uniq.bam.bai")
    params:
        "" # optional params string
    priority: 3
    wrapper:
        "0.30.0/bio/samtools/index"

rule samtools_idxstats_species:
    input:
        bam="/shared/projects/xci/{species}/stem_cells/charbel_2022/cutrun_2023/bam/{sample}.{species}.uniq.bam",
        bai="/shared/projects/xci/{species}/stem_cells/charbel_2022/cutrun_2023/bam/{sample}.{species}.uniq.bam.bai"
    output: "/shared/projects/xci/{species}/stem_cells/charbel_2022/cutrun_2023/stats/{sample}.{species}.txt"
    log: "log/{species}_{sample}_stats.txt"
    priority: 3
    shell:
        "(samtools idxstats {input.bam} > {output}) 2> {log}"

rule AddOrReplaceReadGroups:
    input:
        bam="/shared/projects/xci/{species}/stem_cells/charbel_2022/cutrun_2023/bam/{sample}.{species}.uniq.bam",
        bai="/shared/projects/xci/{species}/stem_cells/charbel_2022/cutrun_2023/bam/{sample}.{species}.uniq.bam.bai"
    output: temp("/shared/projects/xci/{species}/stem_cells/charbel_2022/cutrun_2023/bam/{sample}.{species}.rg.added.bam")
    params:
        SO="coordinate",
        RGID="id",
        RGLB="library",
        RGPL="platform",
        RGPU="machine",
        RGSM="sample"
    priority: 5
    log:
        "log/{species}_{sample}_AddOrReplaceReadGroups.log"
    shell:
        "(picard  AddOrReplaceReadGroups \
            I={input.bam} \
            O={output} \
            SO={params.SO} \
            RGID={params.RGID} \
            RGLB={params.RGLB} \
            RGPL={params.RGPL} \
            RGPU={params.RGPU} \
            RGSM={params.RGSM}) 2> {log}"

rule AddOrReplaceReadGroups_mus:
    input:
        bam="/shared/projects/xci/{species}/stem_cells/charbel_2022/cutrun_2023/bam/{sample}.mus.uniq.bam",
        bai="/shared/projects/xci/{species}/stem_cells/charbel_2022/cutrun_2023/bam/{sample}.mus.uniq.bam.bai"
    output: temp("/shared/projects/xci/{species}/stem_cells/charbel_2022/cutrun_2023/bam/{sample}.mus.rg.added.bam")
    params:
        SO="coordinate",
        RGID="id",
        RGLB="library",
        RGPL="platform",
        RGPU="machine",
        RGSM="sample"
    priority: 5
    log:
        "log/{species}_{sample}_mus_AddOrReplaceReadGroups.log"
    shell:
        "(picard AddOrReplaceReadGroups \
            I={input.bam} \
            O={output} \
            SO={params.SO} \
            RGID={params.RGID} \
            RGLB={params.RGLB} \
            RGPL={params.RGPL} \
            RGPU={params.RGPU} \
            RGSM={params.RGSM}) 2> {log}"

rule MarkDuplicates:
    input: 
            bam="/shared/projects/xci/{species}/stem_cells/charbel_2022/cutrun_2023/bam/{sample}.{species}.uniq.bam",
            bai="/shared/projects/xci/{species}/stem_cells/charbel_2022/cutrun_2023/bam/{sample}.{species}.uniq.bam.bai"
    output: temp("/shared/projects/xci/{species}/stem_cells/charbel_2022/cutrun_2023/bam/{sample}.{species}.dedupped.bam")
    params:
            CREATE_INDEX="true",
            VALIDATION_STRINGENCY="SILENT",
            REMOVE_DUPLICATES="true",
            ASSUME_SORTED="true",
            M="output.metrics"
    log:
        "log/{species}_{sample}_MarkDuplicates.log"
    priority: 6
    shell:
        "(picard MarkDuplicates \
            I={input.bam} \
            O={output} \
            CREATE_INDEX={params.CREATE_INDEX} \
            VALIDATION_STRINGENCY={params.VALIDATION_STRINGENCY} \
            REMOVE_DUPLICATES={params.REMOVE_DUPLICATES} \
            ASSUME_SORTED={params.ASSUME_SORTED} \
            M={params.M}) 2> {log}"

rule MarkDuplicates_mus:
    input: 
            bam="/shared/projects/xci/{species}/stem_cells/charbel_2022/cutrun_2023/bam/{sample}.mus.uniq.bam",
            bai="/shared/projects/xci/{species}/stem_cells/charbel_2022/cutrun_2023/bam/{sample}.mus.uniq.bam.bai"
    output: temp("/shared/projects/xci/{species}/stem_cells/charbel_2022/cutrun_2023/bam/{sample}.mus.dedupped.bam")
    params:
            CREATE_INDEX="true",
            VALIDATION_STRINGENCY="SILENT",
            REMOVE_DUPLICATES="true",
            ASSUME_SORTED="true",
            M="output.metrics"
    log:
        "log/{species}_{sample}_mus_MarkDuplicates.log"
    priority: 6
    shell:
        "(picard MarkDuplicates \
            I={input.bam} \
            O={output} \
            CREATE_INDEX={params.CREATE_INDEX} \
            VALIDATION_STRINGENCY={params.VALIDATION_STRINGENCY} \
            REMOVE_DUPLICATES={params.REMOVE_DUPLICATES} \
            ASSUME_SORTED={params.ASSUME_SORTED} \
            M={params.M}) 2> {log}"

rule samtools_index_mus_md:
    input: "/shared/projects/xci/{species}/stem_cells/charbel_2022/cutrun_2023/bam/{sample}.mus.dedupped.bam"
    output: temp("/shared/projects/xci/{species}/stem_cells/charbel_2022/cutrun_2023/bam/{sample}.mus.dedupped.bam.bai")
    params:
        "" # optional params string
    priority: 3
    wrapper:
        "0.30.0/bio/samtools/index"

rule samtools_index_md:
    input: "/shared/projects/xci/{species}/stem_cells/charbel_2022/cutrun_2023/bam/{sample}.{species}.dedupped.bam"
    output: temp("/shared/projects/xci/{species}/stem_cells/charbel_2022/cutrun_2023/bam/{sample}.{species}.dedupped.bam.bai")
    params:
        "" # optional params string
    priority: 3
    wrapper:
        "0.30.0/bio/samtools/index"

rule Perform_Xenofilter:
    input: 
        species="/shared/projects/xci/{species}/stem_cells/charbel_2022/cutrun_2023/bam/{sample}.{species}.dedupped.bam",
        mouse="/shared/projects/xci/{species}/stem_cells/charbel_2022/cutrun_2023/bam/{sample}.mus.dedupped.bam"
    output:
        bam="/shared/projects/xci/{species}/stem_cells/charbel_2022/cutrun_2023/bam/{sample}/Filtered_bams/{sample}_Filtered.bam",
        bai="/shared/projects/xci/{species}/stem_cells/charbel_2022/cutrun_2023/bam/{sample}/Filtered_bams/{sample}_Filtered.bam.bai"
    log:"log/{species}_{sample}_xenofilter.log"
    shell:
        "(Rscript Xeno.R {input.species} {input.mouse}) 2> {log}"

#stats on bam
rule stats_bam:
    input:
        bam="/shared/projects/xci/{species}/stem_cells/charbel_2022/cutrun_2023/bam/{sample}/Filtered_bams/{sample}_Filtered.bam",
        bai="/shared/projects/xci/{species}/stem_cells/charbel_2022/cutrun_2023/bam/{sample}/Filtered_bams/{sample}_Filtered.bam.bai"
    output: "/shared/projects/xci/{species}/stem_cells/charbel_2022/cutrun_2023/bam/{sample}/Filtered_bams/{sample}_filtered_bam_stat.txt"
    log: "log/{species}_{sample}_filtered_bam_stat.err"
    shell:"""
    samtools idxstats {input.bam} > {output} 2> {log}
    """

rule bigwig:
    input:
        bam="/shared/projects/xci/{species}/stem_cells/charbel_2022/cutrun_2023/bam/{sample}/Filtered_bams/{sample}_Filtered.bam"
    output: protected("/shared/projects/xci/{species}/stem_cells/charbel_2022/cutrun_2023/bigwig/{sample}.{species}.BPM.all.bw")
    params:
        normalizeUsing="BPM",
        binSize=20,
        smoothLength=40
    log: "log/{species}_{sample}_BPM.log"
    shell:
        "(bamCoverage -b {input.bam} \
        --normalizeUsing {params.normalizeUsing}  --binSize {params.binSize} \
        --smoothLength {params.smoothLength} -o {output}) 2> {log}"

rule Read_number:
    input:
        bw_bpm_homo_sapiens=expand("/shared/projects/xci/homo_sapiens/stem_cells/charbel_2022/cutrun_2023/bigwig/{sample}.homo_sapiens.BPM.all.bw", sample=config["SAMPLES_HUMAN"]),
        stat_coli_homo_sapiens=expand("/shared/projects/xci/homo_sapiens/stem_cells/charbel_2022/cutrun_2023/stats/{sample}.coli.txt", sample=config["SAMPLES_HUMAN"]),
        stat_yeast_homo_sapiens=expand("/shared/projects/xci/homo_sapiens/stem_cells/charbel_2022/cutrun_2023/stats/{sample}.yeast.txt", sample=config["SAMPLES_HUMAN"]),
        bw_bpm_callitrix_jacchus=expand("/shared/projects/xci/callitrix_jacchus/stem_cells/charbel_2022/cutrun_2023/bigwig/{sample}.callitrix_jacchus.BPM.all.bw", sample=config["SAMPLES_MARMOSET"]),
        stat_coli_callitrix_jacchus=expand("/shared/projects/xci/callitrix_jacchus/stem_cells/charbel_2022/cutrun_2023/stats/{sample}.coli.txt", sample=config["SAMPLES_MARMOSET"]),
        stat_yeast_callitrix_jacchus=expand("/shared/projects/xci/callitrix_jacchus/stem_cells/charbel_2022/cutrun_2023/stats/{sample}.yeast.txt", sample=config["SAMPLES_MARMOSET"])
    output: 
        all_hg38="/shared/projects/xci/homo_sapiens/stem_cells/charbel_2022/cutrun_2023/stats/homo_sapiens_scale_factors_yeast_ecoli_all_chromosomes.txt",
        marks_hg38="/shared/projects/xci/homo_sapiens/stem_cells/charbel_2022/cutrun_2023/stats/homo_sapiens_scale_factors_by_mark_yeast_ecoli_all_chromosomes.txt",
        all_calJac4="/shared/projects/xci/callitrix_jacchus/stem_cells/charbel_2022/cutrun_2023/stats/callitrix_jacchus_scale_factors_yeast_ecoli_all_chromosomes.txt",
        marks_calJac4="/shared/projects/xci/callitrix_jacchus/stem_cells/charbel_2022/cutrun_2023/stats/callitrix_jacchus_scale_factors_by_mark_yeast_ecoli_all_chromosomes.txt"
    params:
        species=["homo_sapiens","callitrix_jacchus"]
    shell:
        "Rscript Read_number_all_chromosomes.R {params.species}"

rule bw_spike_yeast_all:
    input:
        bam="/shared/projects/xci/{species}/stem_cells/charbel_2022/cutrun_2023/bam/{sample}/Filtered_bams/{sample}_Filtered.bam",
        scale="/shared/projects/xci/{species}/stem_cells/charbel_2022/cutrun_2023/stats/{species}_scale_factors_yeast_ecoli_all_chromosomes.txt"
    output: protected("/shared/projects/xci/{species}/stem_cells/charbel_2022/cutrun_2023/bigwig/{sample}.{species}.spike.yeast.all.BPM.all.bw")
    params:
        normalizeUsing="BPM",
        binSize=20,
        smoothLength=40,
        samp="{sample}",
        specie="yeast"
    log: "log/{species}_{sample}_spike_yeast_all_BPM.log"
    shell:
        "bash bigwig_command.sh {params.samp} {input.scale} {input.bam} {params.normalizeUsing} {params.binSize} {params.smoothLength} {output} {log} {params.specie}"







